{"file":"/Users/noeliaparadacastro/itx-backend-tool/src/Itx/Application/Service/ProductListService.ts","mappings":";;AAIA,MAAqB,kBAAkB;IACtC,YAA6B,iBAAkC;QAAlC,sBAAiB,GAAjB,iBAAiB,CAAiB;IAAG,CAAC;IACnE,YAAY,CAAC,QAAuB,EAAE,OAAwB;QAC7D,MAAM,aAAa,GAAG,QAAQ,CAAC,GAAG,CAAC,CAAC,OAAO,EAAE,EAAE;YAC9C,MAAM,UAAU,GAAG,IAAI,CAAC,mBAAmB,CAAC,OAAO,EAAE,OAAO,CAAC,CAAA;YAC7D,OAAO;gBACN,OAAO;gBACP,KAAK,EAAE,UAAU;aACjB,CAAA;QACF,CAAC,CAAC,CAAA;QAEF,OAAO,aAAa;aAClB,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,KAAK,CAAC;aACjC,GAAG,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,KAAK,CAAC,OAAO,CAAC,CAAA;IAChC,CAAC;IAEO,mBAAmB,CAAC,OAAoB,EAAE,OAAwB;QACzE,OAAO,IAAI,CAAC,iBAAiB;aAC3B,GAAG,CAAC,CAAC,QAAQ,EAAE,EAAE,CAAC,QAAQ,CAAC,cAAc,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;aAC5D,MAAM,CAAC,CAAC,GAAG,EAAE,KAAK,EAAE,EAAE,CAAC,GAAG,GAAG,KAAK,EAAE,CAAC,CAAC,CAAA;IACzC,CAAC;CACD;AArBD,qCAqBC","names":[],"sources":["/Users/noeliaparadacastro/itx-backend-tool/src/Itx/Application/Service/ProductListService.ts"],"sourcesContent":["import ProductView from '../Query/View/ProductView'\nimport { SortWeightQuery } from '../Query/SortWeightQuery'\nimport ScoreStrategy from './ScoreStrategy'\n\nexport default class ProductListService {\n\tconstructor(private readonly scoringStrategies: ScoreStrategy[]) {}\n\tlistProducts(products: ProductView[], weights: SortWeightQuery): ProductView[] {\n\t\tconst productScores = products.map((product) => {\n\t\t\tconst totalScore = this.calculateTotalScore(product, weights)\n\t\t\treturn {\n\t\t\t\tproduct,\n\t\t\t\tscore: totalScore\n\t\t\t}\n\t\t})\n\n\t\treturn productScores\n\t\t\t.sort((a, b) => b.score - a.score)\n\t\t\t.map((entry) => entry.product) \n\t}\n\n\tprivate calculateTotalScore(product: ProductView, weights: SortWeightQuery): number {\n\t\treturn this.scoringStrategies\n\t\t\t.map((strategy) => strategy.calculateScore(product, weights))\n\t\t\t.reduce((acc, score) => acc + score, 0)\n\t}\n}\n"],"version":3}
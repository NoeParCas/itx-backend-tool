ec57bdf625dc5443f28341d7e8c1df2a
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const ProductView_1 = __importDefault(require("../../../../src/Itx/Application/Query/View/ProductView"));
const SizeStockView_1 = __importDefault(require("../../../../src/Itx/Application/Query/View/SizeStockView"));
const ProductListService_1 = __importDefault(require("../../../../src/Itx/Application/Service/ProductListService"));
const mocks_1 = require("../../Infrastructure/Mocks/mocks");
describe('ProductListService', () => {
    let service;
    let mockSalesScoreStrategy;
    let mockSizeStockScoreStrategy;
    let products;
    let weights;
    beforeEach(() => {
        mockSalesScoreStrategy = {
            calculateScore: jest.fn(),
        };
        mockSizeStockScoreStrategy = {
            calculateScore: jest.fn(),
        };
        service = new ProductListService_1.default([
            mockSalesScoreStrategy,
            mockSizeStockScoreStrategy,
        ]);
        weights = {
            id: 'ramdomId',
            salesUnit: 0.7,
            stockRatio: 0.3
        };
        products = [
            new ProductView_1.default(mocks_1.PRODUCT_ID, mocks_1.PRODUCT_NAME, mocks_1.PRODUCT_UNIT_SALES, [
                new SizeStockView_1.default(mocks_1.SIZE_S, mocks_1.RANDOM_SIZE_STOCK),
                new SizeStockView_1.default(mocks_1.SIZE_M, mocks_1.RANDOM_SIZE_STOCK_2),
                new SizeStockView_1.default(mocks_1.SIZE_L, mocks_1.RANDOM_SIZE_STOCK_3)
            ]),
            new ProductView_1.default(mocks_1.ANY_OTHER_PRODUCT_ID, mocks_1.ANY_OTHER_PRODUCT_NAME, mocks_1.ANY_OTHER_PRODUCT_UNIT_SALES, [
                new SizeStockView_1.default(mocks_1.SIZE_S, mocks_1.RANDOM_SIZE_STOCK_4),
                new SizeStockView_1.default(mocks_1.SIZE_M, mocks_1.RANDOM_SIZE_STOCK_2),
                new SizeStockView_1.default(mocks_1.SIZE_L, mocks_1.RANDOM_SIZE_STOCK_4)
            ])
        ];
    });
    it('should call calculateScore on each scoring strategy for each product', () => {
        service.listProducts(products, weights);
        expect(mockSalesScoreStrategy.calculateScore).toHaveBeenCalledTimes(products.length);
        products.forEach((product) => {
            expect(mockSalesScoreStrategy.calculateScore).toHaveBeenCalledWith(product, weights);
        });
        expect(mockSizeStockScoreStrategy.calculateScore).toHaveBeenCalledTimes(products.length);
        products.forEach((product) => {
            expect(mockSizeStockScoreStrategy.calculateScore).toHaveBeenCalledWith(product, weights);
        });
    });
    it('should sort the products by their total score in descending order', () => {
        mockSalesScoreStrategy.calculateScore
            .mockReturnValueOnce(7)
            .mockReturnValueOnce(14);
        mockSizeStockScoreStrategy.calculateScore
            .mockReturnValueOnce(0.9)
            .mockReturnValueOnce(0.3);
        const sortedProducts = service.listProducts(products, weights);
        expect(sortedProducts[0].id).toBe(2);
        expect(sortedProducts[1].id).toBe(1);
    });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiL1VzZXJzL25vZWxpYXBhcmFkYWNhc3Ryby9pdHgtYmFja2VuZC10b29sL3Rlc3RzL2plc3QvQXBwbGljYXRpb24vU2VydmljZS9Qcm9kdWN0TGlzdFNlcnZpY2UudGVzdC50cyIsIm1hcHBpbmdzIjoiOzs7OztBQUNBLHlHQUFnRjtBQUNoRiw2R0FBb0Y7QUFDcEYsb0hBQTJGO0FBRzNGLDREQUFxUjtBQUVyUixRQUFRLENBQUMsb0JBQW9CLEVBQUUsR0FBRyxFQUFFO0lBQ25DLElBQUksT0FBMkIsQ0FBQTtJQUMvQixJQUFJLHNCQUF1RCxDQUFBO0lBQzNELElBQUksMEJBQStELENBQUE7SUFDbkUsSUFBSSxRQUF1QixDQUFBO0lBQzFCLElBQUksT0FBd0IsQ0FBQTtJQUU1QixVQUFVLENBQUMsR0FBRyxFQUFFO1FBQ2Qsc0JBQXNCLEdBQUc7WUFDdkIsY0FBYyxFQUFFLElBQUksQ0FBQyxFQUFFLEVBQUU7U0FDUyxDQUFBO1FBRXBDLDBCQUEwQixHQUFHO1lBQzNCLGNBQWMsRUFBRSxJQUFJLENBQUMsRUFBRSxFQUFFO1NBQ2EsQ0FBQTtRQUN4QyxPQUFPLEdBQUcsSUFBSSw0QkFBa0IsQ0FBQztZQUMvQixzQkFBc0I7WUFDdEIsMEJBQTBCO1NBQzNCLENBQUMsQ0FBQTtRQUNKLE9BQU8sR0FBRztZQUNULEVBQUUsRUFBRSxVQUFVO1lBQ2QsU0FBUyxFQUFFLEdBQUc7WUFDZCxVQUFVLEVBQUUsR0FBRztTQUNmLENBQUE7UUFDRCxRQUFRLEdBQUc7WUFDVixJQUFJLHFCQUFXLENBQ2Qsa0JBQVUsRUFDVixvQkFBWSxFQUNaLDBCQUFrQixFQUNsQjtnQkFDQyxJQUFJLHVCQUFhLENBQUMsY0FBTSxFQUFFLHlCQUFpQixDQUFDO2dCQUM1QyxJQUFJLHVCQUFhLENBQUMsY0FBTSxFQUFFLDJCQUFtQixDQUFDO2dCQUM5QyxJQUFJLHVCQUFhLENBQUMsY0FBTSxFQUFFLDJCQUFtQixDQUFDO2FBQzlDLENBQ0Q7WUFDRCxJQUFJLHFCQUFXLENBQ2QsNEJBQW9CLEVBQ3BCLDhCQUFzQixFQUN0QixvQ0FBNEIsRUFDNUI7Z0JBQ0MsSUFBSSx1QkFBYSxDQUFDLGNBQU0sRUFBRSwyQkFBbUIsQ0FBQztnQkFDOUMsSUFBSSx1QkFBYSxDQUFDLGNBQU0sRUFBRSwyQkFBbUIsQ0FBQztnQkFDOUMsSUFBSSx1QkFBYSxDQUFDLGNBQU0sRUFBRSwyQkFBbUIsQ0FBQzthQUM5QyxDQUNEO1NBQ0QsQ0FBQTtJQUNGLENBQUMsQ0FBQyxDQUFBO0lBRUYsRUFBRSxDQUFDLHNFQUFzRSxFQUFFLEdBQUcsRUFBRTtRQUM3RSxPQUFPLENBQUMsWUFBWSxDQUFDLFFBQVEsRUFBRSxPQUFPLENBQUMsQ0FBQTtRQUV2QyxNQUFNLENBQUMsc0JBQXNCLENBQUMsY0FBYyxDQUFDLENBQUMscUJBQXFCLENBQUMsUUFBUSxDQUFDLE1BQU0sQ0FBQyxDQUFBO1FBQ3BGLFFBQVEsQ0FBQyxPQUFPLENBQUMsQ0FBQyxPQUFPLEVBQUUsRUFBRTtZQUMzQixNQUFNLENBQUMsc0JBQXNCLENBQUMsY0FBYyxDQUFDLENBQUMsb0JBQW9CLENBQUMsT0FBTyxFQUFFLE9BQU8sQ0FBQyxDQUFBO1FBQ3RGLENBQUMsQ0FBQyxDQUFBO1FBRUYsTUFBTSxDQUFDLDBCQUEwQixDQUFDLGNBQWMsQ0FBQyxDQUFDLHFCQUFxQixDQUFDLFFBQVEsQ0FBQyxNQUFNLENBQUMsQ0FBQTtRQUN4RixRQUFRLENBQUMsT0FBTyxDQUFDLENBQUMsT0FBTyxFQUFFLEVBQUU7WUFDM0IsTUFBTSxDQUFDLDBCQUEwQixDQUFDLGNBQWMsQ0FBQyxDQUFDLG9CQUFvQixDQUFDLE9BQU8sRUFBRSxPQUFPLENBQUMsQ0FBQTtRQUMxRixDQUFDLENBQUMsQ0FBQTtJQUNKLENBQUMsQ0FBQyxDQUFBO0lBRUgsRUFBRSxDQUFDLG1FQUFtRSxFQUFFLEdBQUcsRUFBRTtRQUM1RSxzQkFBc0IsQ0FBQyxjQUFjO2FBQ3BDLG1CQUFtQixDQUFDLENBQUMsQ0FBQzthQUN0QixtQkFBbUIsQ0FBQyxFQUFFLENBQUMsQ0FBQTtRQUN4QiwwQkFBMEIsQ0FBQyxjQUFjO2FBQ3hDLG1CQUFtQixDQUFDLEdBQUcsQ0FBQzthQUN4QixtQkFBbUIsQ0FBQyxHQUFHLENBQUMsQ0FBQTtRQUV2QixNQUFNLGNBQWMsR0FBRyxPQUFPLENBQUMsWUFBWSxDQUFDLFFBQVEsRUFBRSxPQUFPLENBQUMsQ0FBQTtRQUU5RCxNQUFNLENBQUMsY0FBYyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQTtRQUN0QyxNQUFNLENBQUMsY0FBYyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQTtJQUNwQyxDQUFDLENBQUMsQ0FBQTtBQUNKLENBQUMsQ0FBQyxDQUFBIiwibmFtZXMiOltdLCJzb3VyY2VzIjpbIi9Vc2Vycy9ub2VsaWFwYXJhZGFjYXN0cm8vaXR4LWJhY2tlbmQtdG9vbC90ZXN0cy9qZXN0L0FwcGxpY2F0aW9uL1NlcnZpY2UvUHJvZHVjdExpc3RTZXJ2aWNlLnRlc3QudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgU29ydFdlaWdodFF1ZXJ5IH0gZnJvbSAnLi4vLi4vLi4vLi4vc3JjL0l0eC9BcHBsaWNhdGlvbi9RdWVyeS9Tb3J0V2VpZ2h0UXVlcnknXG5pbXBvcnQgUHJvZHVjdFZpZXcgZnJvbSAnLi4vLi4vLi4vLi4vc3JjL0l0eC9BcHBsaWNhdGlvbi9RdWVyeS9WaWV3L1Byb2R1Y3RWaWV3J1xuaW1wb3J0IFNpemVTdG9ja1ZpZXcgZnJvbSAnLi4vLi4vLi4vLi4vc3JjL0l0eC9BcHBsaWNhdGlvbi9RdWVyeS9WaWV3L1NpemVTdG9ja1ZpZXcnXG5pbXBvcnQgUHJvZHVjdExpc3RTZXJ2aWNlIGZyb20gJy4uLy4uLy4uLy4uL3NyYy9JdHgvQXBwbGljYXRpb24vU2VydmljZS9Qcm9kdWN0TGlzdFNlcnZpY2UnXG5pbXBvcnQgU2FsZXNTY29yZVN0cmF0ZWd5IGZyb20gJy4uLy4uLy4uLy4uL3NyYy9JdHgvQXBwbGljYXRpb24vU2VydmljZS9TYWxlc1Njb3JlU3RyYXRlZ3knXG5pbXBvcnQgU2l6ZVN0b2NrU2NvcmVTdHJhdGVneSBmcm9tICcuLi8uLi8uLi8uLi9zcmMvSXR4L0FwcGxpY2F0aW9uL1NlcnZpY2UvU2l6ZVN0b2NrU2NvcmVTdHJhdGVneSdcbmltcG9ydCB7IEFOWV9PVEhFUl9QUk9EVUNUX0lELCBBTllfT1RIRVJfUFJPRFVDVF9OQU1FLCBBTllfT1RIRVJfUFJPRFVDVF9VTklUX1NBTEVTLCBQUk9EVUNUX0lELCBQUk9EVUNUX05BTUUsIFBST0RVQ1RfVU5JVF9TQUxFUywgUkFORE9NX1NJWkVfU1RPQ0ssIFJBTkRPTV9TSVpFX1NUT0NLXzIsIFJBTkRPTV9TSVpFX1NUT0NLXzMsIFJBTkRPTV9TSVpFX1NUT0NLXzQsIFNJWkVfTCwgU0laRV9NLCBTSVpFX1MgfSBmcm9tICcuLi8uLi9JbmZyYXN0cnVjdHVyZS9Nb2Nrcy9tb2NrcydcblxuZGVzY3JpYmUoJ1Byb2R1Y3RMaXN0U2VydmljZScsICgpID0+IHtcblx0bGV0IHNlcnZpY2U6IFByb2R1Y3RMaXN0U2VydmljZVxuXHRsZXQgbW9ja1NhbGVzU2NvcmVTdHJhdGVneTogamVzdC5Nb2NrZWQ8U2FsZXNTY29yZVN0cmF0ZWd5PlxuXHRsZXQgbW9ja1NpemVTdG9ja1Njb3JlU3RyYXRlZ3k6IGplc3QuTW9ja2VkPFNpemVTdG9ja1Njb3JlU3RyYXRlZ3k+XG5cdGxldCBwcm9kdWN0czogUHJvZHVjdFZpZXdbXVxuICBsZXQgd2VpZ2h0czogU29ydFdlaWdodFF1ZXJ5XG5cbiAgYmVmb3JlRWFjaCgoKSA9PiB7XG4gICAgbW9ja1NhbGVzU2NvcmVTdHJhdGVneSA9IHtcbiAgICAgIGNhbGN1bGF0ZVNjb3JlOiBqZXN0LmZuKCksXG4gICAgfSBhcyBqZXN0Lk1vY2tlZDxTYWxlc1Njb3JlU3RyYXRlZ3k+XG5cbiAgICBtb2NrU2l6ZVN0b2NrU2NvcmVTdHJhdGVneSA9IHtcbiAgICAgIGNhbGN1bGF0ZVNjb3JlOiBqZXN0LmZuKCksXG4gICAgfSBhcyBqZXN0Lk1vY2tlZDxTaXplU3RvY2tTY29yZVN0cmF0ZWd5PlxuICAgIHNlcnZpY2UgPSBuZXcgUHJvZHVjdExpc3RTZXJ2aWNlKFtcbiAgICAgIG1vY2tTYWxlc1Njb3JlU3RyYXRlZ3ksXG4gICAgICBtb2NrU2l6ZVN0b2NrU2NvcmVTdHJhdGVneSxcbiAgICBdKVxuXHRcdHdlaWdodHMgPSB7XG5cdFx0XHRpZDogJ3JhbWRvbUlkJyxcblx0XHRcdHNhbGVzVW5pdDogMC43LFxuXHRcdFx0c3RvY2tSYXRpbzogMC4zXG5cdFx0fVxuXHRcdHByb2R1Y3RzID0gW1xuXHRcdFx0bmV3IFByb2R1Y3RWaWV3KFxuXHRcdFx0XHRQUk9EVUNUX0lELFxuXHRcdFx0XHRQUk9EVUNUX05BTUUsXG5cdFx0XHRcdFBST0RVQ1RfVU5JVF9TQUxFUyxcblx0XHRcdFx0W1xuXHRcdFx0XHRcdG5ldyBTaXplU3RvY2tWaWV3KFNJWkVfUywgUkFORE9NX1NJWkVfU1RPQ0spLFxuXHRcdFx0XHRcdG5ldyBTaXplU3RvY2tWaWV3KFNJWkVfTSwgUkFORE9NX1NJWkVfU1RPQ0tfMiksXG5cdFx0XHRcdFx0bmV3IFNpemVTdG9ja1ZpZXcoU0laRV9MLCBSQU5ET01fU0laRV9TVE9DS18zKVxuXHRcdFx0XHRdXG5cdFx0XHQpLFxuXHRcdFx0bmV3IFByb2R1Y3RWaWV3KFxuXHRcdFx0XHRBTllfT1RIRVJfUFJPRFVDVF9JRCxcblx0XHRcdFx0QU5ZX09USEVSX1BST0RVQ1RfTkFNRSxcblx0XHRcdFx0QU5ZX09USEVSX1BST0RVQ1RfVU5JVF9TQUxFUyxcblx0XHRcdFx0W1xuXHRcdFx0XHRcdG5ldyBTaXplU3RvY2tWaWV3KFNJWkVfUywgUkFORE9NX1NJWkVfU1RPQ0tfNCksXG5cdFx0XHRcdFx0bmV3IFNpemVTdG9ja1ZpZXcoU0laRV9NLCBSQU5ET01fU0laRV9TVE9DS18yKSxcblx0XHRcdFx0XHRuZXcgU2l6ZVN0b2NrVmlldyhTSVpFX0wsIFJBTkRPTV9TSVpFX1NUT0NLXzQpXG5cdFx0XHRcdF1cblx0XHRcdClcblx0XHRdXG5cdH0pXG5cblx0aXQoJ3Nob3VsZCBjYWxsIGNhbGN1bGF0ZVNjb3JlIG9uIGVhY2ggc2NvcmluZyBzdHJhdGVneSBmb3IgZWFjaCBwcm9kdWN0JywgKCkgPT4ge1xuICAgIHNlcnZpY2UubGlzdFByb2R1Y3RzKHByb2R1Y3RzLCB3ZWlnaHRzKVxuXG4gICAgZXhwZWN0KG1vY2tTYWxlc1Njb3JlU3RyYXRlZ3kuY2FsY3VsYXRlU2NvcmUpLnRvSGF2ZUJlZW5DYWxsZWRUaW1lcyhwcm9kdWN0cy5sZW5ndGgpXG4gICAgcHJvZHVjdHMuZm9yRWFjaCgocHJvZHVjdCkgPT4ge1xuICAgICAgZXhwZWN0KG1vY2tTYWxlc1Njb3JlU3RyYXRlZ3kuY2FsY3VsYXRlU2NvcmUpLnRvSGF2ZUJlZW5DYWxsZWRXaXRoKHByb2R1Y3QsIHdlaWdodHMpXG4gICAgfSlcblxuICAgIGV4cGVjdChtb2NrU2l6ZVN0b2NrU2NvcmVTdHJhdGVneS5jYWxjdWxhdGVTY29yZSkudG9IYXZlQmVlbkNhbGxlZFRpbWVzKHByb2R1Y3RzLmxlbmd0aClcbiAgICBwcm9kdWN0cy5mb3JFYWNoKChwcm9kdWN0KSA9PiB7XG4gICAgICBleHBlY3QobW9ja1NpemVTdG9ja1Njb3JlU3RyYXRlZ3kuY2FsY3VsYXRlU2NvcmUpLnRvSGF2ZUJlZW5DYWxsZWRXaXRoKHByb2R1Y3QsIHdlaWdodHMpXG4gICAgfSlcbiAgfSlcblxuXHRpdCgnc2hvdWxkIHNvcnQgdGhlIHByb2R1Y3RzIGJ5IHRoZWlyIHRvdGFsIHNjb3JlIGluIGRlc2NlbmRpbmcgb3JkZXInLCAoKSA9PiB7XG5cdFx0bW9ja1NhbGVzU2NvcmVTdHJhdGVneS5jYWxjdWxhdGVTY29yZVxuXHRcdC5tb2NrUmV0dXJuVmFsdWVPbmNlKDcpIFxuXHRcdC5tb2NrUmV0dXJuVmFsdWVPbmNlKDE0KSBcblx0XHRtb2NrU2l6ZVN0b2NrU2NvcmVTdHJhdGVneS5jYWxjdWxhdGVTY29yZVxuXHRcdC5tb2NrUmV0dXJuVmFsdWVPbmNlKDAuOSlcblx0XHQubW9ja1JldHVyblZhbHVlT25jZSgwLjMpXG5cbiAgICBjb25zdCBzb3J0ZWRQcm9kdWN0cyA9IHNlcnZpY2UubGlzdFByb2R1Y3RzKHByb2R1Y3RzLCB3ZWlnaHRzKVxuXG4gICAgZXhwZWN0KHNvcnRlZFByb2R1Y3RzWzBdLmlkKS50b0JlKDIpXG5cdFx0ZXhwZWN0KHNvcnRlZFByb2R1Y3RzWzFdLmlkKS50b0JlKDEpXG4gIH0pXG59KVxuIl0sInZlcnNpb24iOjN9